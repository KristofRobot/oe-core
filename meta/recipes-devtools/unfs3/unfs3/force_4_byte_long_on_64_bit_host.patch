Fix RPC marshalling problem with failed setattr calls

On modern 64 bit hosts you cannot use xdr_u_long to translate a 32 bit
quantity.  Normally rpcgen would be here to re-write the xdr file, but
because this is hard coded and has to work on a large number of hosts,
the xdr_u_int is selected for the highest portability for hosts that
exist at the current time.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 xdr.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

--- a/xdr.c
+++ b/xdr.c
@@ -192,19 +192,19 @@ bool_t xdr_uint64(XDR * xdrs, uint64 * o
 #endif
 #endif
 
-#if HAVE_XDR_UINT32 == 0 && HAVE_XDR_U_LONG == 1
+#if HAVE_XDR_UINT32 == 0
 bool_t xdr_uint32(XDR * xdrs, uint32 * objp)
 {
-    if (!xdr_u_long(xdrs, objp))
+    if (!xdr_u_int(xdrs, (unsigned int *)objp))
 	return FALSE;
     return TRUE;
 }
 #endif
 
-#if HAVE_XDR_INT32 == 0 && HAVE_XDR_LONG == 1
+#if HAVE_XDR_INT32 == 0
 bool_t xdr_int32(XDR * xdrs, int32 * objp)
 {
-    if (!xdr_long(xdrs, objp))
+    if (!xdr_int(xdrs, (int *)objp))
 	return FALSE;
     return TRUE;
 }
